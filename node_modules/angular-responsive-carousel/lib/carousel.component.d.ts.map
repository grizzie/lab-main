{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Images } from './interfaces';\nimport { Properties as CarouselProperties } from './interfaces';\nexport declare class CarouselComponent implements OnDestroy {\n    private elementRef;\n    private ref;\n    carousel: any;\n    container: any;\n    utils: any;\n    cells: any;\n    slide: any;\n    _id: string;\n    _images: Images;\n    touches: any;\n    landscapeMode: any;\n    minTimeout: number;\n    isVideoPlaying: boolean;\n    _isCounter: boolean;\n    _width: number;\n    _cellWidth: number | '100%';\n    _loop: boolean;\n    _lightDOM: boolean;\n    isMoving: boolean;\n    isNgContent: boolean;\n    cellLength: number;\n    dotsArr: any;\n    carouselProperties: CarouselProperties;\n    savedCarouselWidth: number;\n    get isContainerLocked(): any;\n    get slideCounter(): any;\n    get lapCounter(): any;\n    get isLandscape(): boolean;\n    get isSafari(): any;\n    get counter(): string;\n    get cellsElement(): any;\n    get isArrows(): boolean;\n    get isCounter(): boolean;\n    get activeDotIndex(): number;\n    get cellLimit(): any;\n    get carouselWidth(): any;\n    events: EventEmitter<any>;\n    id: number;\n    height: number;\n    width: number;\n    autoplay: boolean;\n    autoplayInterval: number;\n    pauseOnHover: boolean;\n    dots: boolean;\n    borderRadius: number;\n    margin: number;\n    objectFit: 'contain' | 'cover' | 'none';\n    minSwipeDistance: number;\n    transitionDuration: number;\n    transitionTimingFunction: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear';\n    videoProperties: any;\n    counterSeparator: string;\n    overflowCellsLimit: number;\n    listeners: 'auto' | 'mouse and touch';\n    cellsToShow: number;\n    cellsToScroll: number;\n    freeScroll: boolean;\n    arrows: boolean;\n    arrowsOutside: boolean;\n    arrowsTheme: 'light' | 'dark';\n    set images(images: Images & any);\n    get images(): Images & any;\n    set cellWidth(value: number | '100%');\n    set isCounter(value: boolean);\n    set loop(value: boolean);\n    get loop(): boolean;\n    set lightDOM(value: boolean);\n    get lightDOM(): boolean;\n    hostClassCarousel: boolean;\n    hostStyleHeight: string;\n    hostStyleWidth: string;\n    onWindowResize(event: any): void;\n    onMousemove(event: MouseEvent): void;\n    onMouseleave(event: MouseEvent): void;\n    constructor(elementRef: ElementRef, ref: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    initCarousel(): void;\n    resize(): void;\n    detectDomChanges(): void;\n    onDomChanges(): void;\n    setDimensions(): void;\n    getImage(index: number): any;\n    handleTouchstart: (event: any) => void;\n    handleHorizontalSwipe: (event: any) => void;\n    handleTouchend: (event: any) => void;\n    handleTap: (event: any) => void;\n    handleTransitionendCellContainer(event: any): void;\n    getCellWidth(): any;\n    next(): void;\n    prev(): void;\n    isNextArrowDisabled(): any;\n    isPrevArrowDisabled(): any;\n    getCellLength(): any;\n}\n"]}